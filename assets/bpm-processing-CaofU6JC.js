var L=Object.defineProperty;var G=(o,r,s)=>r in o?L(o,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[r]=s;var v=(o,r,s)=>G(o,typeof r!="symbol"?r+"":r,s);import{p as e,w as U,v as D,x as Y,a as S}from"./chunk-PVWAREVJ-CJI3TL4J.js";import{B as P}from"./BlinkingText-DJjh669V.js";import{s as b}from"./spotify-B_RBuzy7.js";const T=({title:o="Cosmic Window",icon:r="📡",children:s,onMinimize:t,onMaximize:i,onClose:p,showControls:j=!0,className:w=""})=>e.jsxs("div",{className:`retro-window ${w}`,children:[e.jsxs("div",{className:"retro-window-header",children:[e.jsxs("span",{children:[r," ",o]}),j&&e.jsxs("div",{className:"retro-window-controls",children:[e.jsx("button",{className:"retro-window-control hover:bg-neon-yellow hover:text-cosmic-black",onClick:t,title:"Minimize",children:"_"}),e.jsx("button",{className:"retro-window-control hover:bg-neon-yellow hover:text-cosmic-black",onClick:i,title:"Maximize",children:"□"}),e.jsx("button",{className:"retro-window-control hover:bg-warning-red hover:text-blink-white",onClick:p,title:"Close",children:"×"})]})]}),e.jsx("div",{className:"retro-window-content",children:s})]}),z=({children:o,direction:r="left",speed:s=20,className:t=""})=>{const i=s<=10?"marquee-fast":s>=30?"marquee-slow":"";return e.jsx("div",{className:`marquee-container ${i} ${t}`,children:e.jsx("div",{className:"marquee-content",style:{animationDirection:r==="right"?"reverse":"normal",animationDuration:`${s}s`},children:o})})};class F{constructor(){v(this,"apiKey");v(this,"baseUrl","https://api.getsongbpm.com");this.apiKey=""}async searchSong(r,s){if(!this.apiKey)return console.warn("GetSongBPM API key not configured"),null;try{const t=await fetch(`${this.baseUrl}/search/?api_key=${this.apiKey}&type=both&lookup=song:${encodeURIComponent(r)}%20artist:${encodeURIComponent(s)}`);if(!t.ok)throw new Error(`Search failed: ${t.statusText}`);const i=await t.json();return i.search&&i.search.length>0?i.search[0].id:null}catch(t){return console.error("GetSongBPM search error:",t),null}}async getSongBPM(r){if(!this.apiKey)return console.warn("GetSongBPM API key not configured"),null;try{const s=await fetch(`${this.baseUrl}/song/?api_key=${this.apiKey}&id=${r}`);if(!s.ok)throw new Error(`BPM fetch failed: ${s.statusText}`);const t=await s.json();return t.song&&typeof t.song.tempo=="number"?Math.round(t.song.tempo):null}catch(s){return console.error("GetSongBPM fetch error:",s),null}}async getBPMForTrack(r,s){try{const t=await this.searchSong(r,s);return t?await this.getSongBPM(t):null}catch(t){return console.error("GetSongBPM track BPM error:",t),null}}async getBPMForTracks(r){const s={};for(const t of r){const i=`${t.title} - ${t.artist}`;s[i]=await this.getBPMForTrack(t.title,t.artist),await new Promise(p=>setTimeout(p,200))}return s}isConfigured(){return!!this.apiKey}}const M=new F,K=()=>{var E;const o=D(),[r]=Y(),[s,t]=S.useState({selectedPlaylists:[],currentPlaylist:0,currentTrack:0,totalTracks:0,completedTracks:0,status:"initializing"}),[i,p]=S.useState([]),[j]=S.useState(["Analyzing cosmic frequencies...","Calculating temporal resonance...","Decoding rhythmic DNA patterns...","Aligning with universal beat grid...","Processing sonic vibrations...","Harmonizing with galactic tempo...","Extracting beat essence...","Calibrating rhythm sensors...","Mapping tempo constellation...","Synchronizing with cosmic pulse..."]),w=S.useCallback(async(a,l)=>{var y,m,f;const d={};for(let x=0;x<a.length;x++){const g=a[x];if(g.status!=="error"){t(k=>({...k,currentPlaylist:x})),p(k=>k.map((N,h)=>h===x?{...N,status:"processing"}:N));try{const N=(await b.getPlaylistTracks(l,g.id)).slice(0,g.totalTracks);d[g.id]={name:g.name,tracks:[],bpmData:{}};for(let h=0;h<N.length;h++){const n=N[h];t(c=>({...c,currentTrack:h+1,completedTracks:c.completedTracks+1}));let u=null;if(M.isConfigured())try{u=await M.getBPMForTrack(n.name,((y=n.artists[0])==null?void 0:y.name)||""),console.log(`GetSongBPM result for "${n.name}":`,u)}catch(c){console.error("GetSongBPM error for track:",n.name,c)}else console.log("GetSongBPM not configured, using Spotify fallback");if(!u)try{console.log(`Fetching Spotify audio features for "${n.name}" (${n.id})`);const c=await b.getAudioFeatures(l,[n.id]);console.log("Audio features response:",c),u=(m=c[n.id])!=null&&m.tempo?Math.round(c[n.id].tempo):null,console.log(`Spotify BPM result for "${n.name}":`,u)}catch(c){console.error("Spotify audio features error for track:",n.name,c),u=null}u||console.warn(`No BPM found for track: "${n.name}" by ${(f=n.artists[0])==null?void 0:f.name}`);const R={...n,bpm:u||null,source:u?M.isConfigured()?"GetSongBPM":"Spotify":"none"};d[g.id].tracks.push(R),d[g.id].bpmData[n.id]=u,p(c=>c.map((A,O)=>O===x?{...A,processedTracks:h+1}:A)),await new Promise(c=>setTimeout(c,300))}p(h=>h.map((n,u)=>u===x?{...n,status:"completed"}:n))}catch(k){console.error(`Error processing playlist ${g.id}:`,k),p(N=>N.map((h,n)=>n===x?{...h,status:"error"}:h))}}}localStorage.setItem("processed_playlists",JSON.stringify(d)),t(x=>({...x,status:"completed"})),setTimeout(()=>{o("/workout-builder")},3e3)},[o]),C=S.useCallback(async a=>{try{const l=b.getStoredTokens();if(!l){o("/");return}t(m=>({...m,status:"initializing"}));const d=[];let y=0;for(const m of a)try{const[f,x]=await Promise.all([b.getPlaylist(l.access_token,m),b.getPlaylistTracks(l.access_token,m)]),g=Math.min(x.length,5);d.push({id:m,name:f.name,totalTracks:g,processedTracks:0,status:"pending"}),y+=g}catch(f){console.error(`Error fetching tracks for playlist ${m}:`,f),d.push({id:m,name:`Error: ${m.slice(0,8)}`,totalTracks:0,processedTracks:0,status:"error"})}p(d),t(m=>({...m,totalTracks:y,status:"processing"})),await w(d,l.access_token)}catch(l){t(d=>({...d,status:"error",error:l instanceof Error?l.message:"Unknown error"}))}},[o,w]);S.useEffect(()=>{var l;const a=((l=r.get("playlists"))==null?void 0:l.split(","))||[];if(a.length===0){o("/playlists");return}t(d=>({...d,selectedPlaylists:a})),C(a)},[r,o,C]);const B=a=>{switch(a){case"pending":return"⏳";case"processing":return"🛸";case"completed":return"✅";case"error":return"❌";default:return"🔮"}},$=()=>{const a=s.completedTracks%j.length;return j[a]},I=()=>s.totalTracks===0?0:Math.round(s.completedTracks/s.totalTracks*100);return s.status==="error"?e.jsx("div",{className:"min-h-screen bg-deep-space text-neon-cyan p-8",children:e.jsx("div",{className:"max-w-4xl mx-auto",children:e.jsx(T,{title:"COSMIC ERROR DETECTED",className:"mb-8",children:e.jsxs("div",{className:"p-8 text-center",children:[e.jsx(P,{className:"text-red-500 text-2xl mb-4",children:"🚨 TRANSMISSION INTERRUPTED 🚨"}),e.jsxs("p",{className:"text-xl mb-4",children:["Error: ",s.error]}),e.jsx("button",{onClick:()=>o("/playlists"),className:"retro-button bg-neon-green text-cosmic-black px-6 py-2",children:"RETURN TO PLAYLIST SELECTION"})]})})})}):e.jsxs("div",{className:"min-h-screen bg-deep-space text-neon-cyan",children:[e.jsx("div",{className:"starfield-bg fixed inset-0 opacity-30"}),e.jsx("div",{className:"relative z-10 p-8",children:e.jsxs("div",{className:"max-w-4xl mx-auto",children:[e.jsx(T,{title:"BPM ANALYSIS IN PROGRESS",className:"mb-8",children:e.jsxs("div",{className:"p-8",children:[e.jsxs(z,{className:"mb-6",children:["🛸 ANALYZING YOUR MUSICAL DNA • CALCULATING COSMIC FREQUENCIES • PROCESSING ",s.totalTracks," SONIC TRANSMISSIONS 🛸"]}),e.jsxs("div",{className:"mb-8",children:[e.jsxs("div",{className:"flex justify-between items-center mb-2",children:[e.jsx("span",{className:"font-bold",children:"OVERALL PROGRESS:"}),e.jsxs("span",{className:"text-neon-green font-mono",children:[I(),"%"]})]}),e.jsx("div",{className:"retro-progress-bar",children:e.jsx("div",{className:"retro-progress-fill",style:{width:`${I()}%`}})})]}),s.status==="processing"&&e.jsxs("div",{className:"text-center mb-6",children:[e.jsx(P,{className:"text-neon-green text-lg",children:$()}),e.jsxs("div",{className:"mt-2 text-sm",children:["Processing track ",s.currentTrack," of"," ",((E=i[s.currentPlaylist])==null?void 0:E.totalTracks)||0]})]}),s.status==="completed"&&e.jsxs("div",{className:"text-center mb-6",children:[e.jsx(P,{className:"text-neon-green text-xl",children:"🎉 COSMIC ANALYSIS COMPLETE! 🎉"}),e.jsx("p",{className:"mt-2",children:"Redirecting to Workout Builder..."})]})]})}),e.jsx(T,{title:"PLAYLIST ANALYSIS STATUS",className:"mb-8",children:e.jsx("div",{className:"p-6",children:e.jsx("div",{className:"space-y-4",children:i.map(a=>e.jsxs("div",{className:`cosmic-border p-4 ${a.status==="processing"?"bg-neon-cyan bg-opacity-10":"bg-cosmic-black bg-opacity-30"}`,children:[e.jsxs("div",{className:"flex items-center justify-between mb-2",children:[e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx("span",{className:"text-xl",children:B(a.status)}),e.jsx("span",{className:"font-bold",children:a.name})]}),e.jsxs("span",{className:"font-mono text-sm",children:[a.processedTracks,"/",a.totalTracks]})]}),e.jsx("div",{className:"retro-progress-bar",children:e.jsx("div",{className:"retro-progress-fill",style:{width:`${a.processedTracks/a.totalTracks*100}%`}})})]},a.id))})})}),e.jsxs(T,{title:"COSMIC STATISTICS",className:"mb-8",children:[e.jsxs("div",{className:"p-6 grid grid-cols-2 md:grid-cols-4 gap-4",children:[e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-neon-green",children:s.completedTracks}),e.jsx("div",{className:"text-sm",children:"TRACKS ANALYZED"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-neon-cyan",children:i.length}),e.jsx("div",{className:"text-sm",children:"PLAYLISTS"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-rainbow-text",children:Math.floor(s.completedTracks*3.5)}),e.jsx("div",{className:"text-sm",children:"MINUTES OF MUSIC"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-neon-green",children:s.status==="completed"?"∞":"?"}),e.jsx("div",{className:"text-sm",children:"COSMIC ENERGY"})]})]}),e.jsx("div",{className:"mt-4 pt-4 border-t border-neon-cyan border-opacity-30 text-center",children:e.jsxs("div",{className:"text-xs text-neon-cyan",children:["BPM data powered by"," ",e.jsx("a",{href:"https://getsongbpm.com",target:"_blank",rel:"noopener noreferrer",className:"text-neon-green hover:text-rainbow-text underline",children:"GetSongBPM.com"})]})})]})]})})]})},H=U(K);export{H as default};
